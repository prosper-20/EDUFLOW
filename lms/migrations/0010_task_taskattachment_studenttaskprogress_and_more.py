# Generated by Django 5.1.7 on 2025-04-07 03:24

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('lms', '0009_remove_file_created_remove_file_updated_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('task_type', models.CharField(choices=[('assignment', 'assignment'), ('individual', 'Individual'), ('group', 'Group'), ('quiz', 'Quiz'), ('project', 'Project')], default='individual', max_length=20)),
                ('submission_type', models.CharField(choices=[('file', 'File Upload'), ('text', 'Text Entry'), ('url', 'URL Submission'), ('none', 'No Submission')], default='file', max_length=20)),
                ('allowed_file_types', models.CharField(blank=True, help_text='Comma-separated list of allowed file extensions (e.g., pdf,docx)', max_length=255)),
                ('max_file_size', models.PositiveIntegerField(default=10, help_text='Maximum file size in MB')),
                ('points_possible', models.PositiveIntegerField(default=100)),
                ('grading_rubric', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField()),
                ('available_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('available_until', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('allow_late_submissions', models.BooleanField(default=False)),
                ('late_submission_penalty', models.FloatField(default=0.0, help_text='Percentage penalty per day (e.g., 5.0 for 5% per day)')),
                ('require_passing_score', models.BooleanField(default=False)),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Minimum score needed to pass (if required)')),
                ('allow_discussion', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='lms.course')),
                ('instructor', models.ForeignKey(limit_choices_to={'role': 'Instructor'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_assignments', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='lms.module')),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='assignments/attachments/')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='lms.task')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTaskProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed', models.BooleanField(default=False)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.PositiveIntegerField(default=0, help_text='Time spent in seconds')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_progress', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='lms.task')),
            ],
            options={
                'verbose_name_plural': 'Student assignment progress',
                'unique_together': {('student', 'task')},
            },
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_content', models.TextField(blank=True)),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='assignments/submissions/')),
                ('url_submission', models.URLField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('is_draft', models.BooleanField(default=True)),
                ('is_late', models.BooleanField(default=False)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('graded_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'Instructor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'Student'}, on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='lms.task')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('task', 'student')},
            },
        ),
    ]
